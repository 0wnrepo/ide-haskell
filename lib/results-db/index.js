"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const result_item_1 = require("./result-item");
exports.ResultItem = result_item_1.ResultItem;
const atom_1 = require("atom");
const provider_1 = require("./provider");
class ResultsDB {
    constructor() {
        this.currentId = 0;
        this.disposables = new atom_1.CompositeDisposable();
        this.emitter = new atom_1.Emitter();
        this.disposables.add(this.emitter);
        this.messages = new Map();
    }
    destroy() {
        this.disposables.dispose();
    }
    onDidUpdate(callback) {
        return this.emitter.on('did-update', callback);
    }
    didUpdate(providerId, msgs) {
        const uris = msgs.map((v) => v.uri).filter((v) => v);
        for (const [k, v] of Array.from(this.messages)) {
            if (v.providerId === providerId || v.uri && uris.includes(v.uri)) {
                this.messages.delete(k);
            }
        }
        for (const msg of msgs) {
            this.messages.set(msg.hash(), msg);
        }
        this.emitter.emit('did-update', this);
    }
    registerProvider(providerName) {
        const p = new provider_1.Provider(this, ++this.currentId, providerName);
        this.disposables.add(p);
        return p;
    }
    results() {
        return this.messages.values();
    }
    *filter(f) {
        for (const v of this.results()) {
            if (f(v)) {
                yield v;
            }
        }
    }
    isEmpty() {
        return this.messages.size === 0;
    }
}
exports.ResultsDB = ResultsDB;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcmVzdWx0cy1kYi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUEyRTtBQUlOLHFCQUoxQix3QkFBVSxDQUkwQjtBQUgvRSwrQkFBaUQ7QUFDakQseUNBQTZEO0FBTTdEO0lBS0U7UUFDRSxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQTtRQUNsQixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksMEJBQW1CLEVBQUUsQ0FBQTtRQUM1QyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksY0FBTyxFQUFFLENBQUE7UUFDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ2xDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQTtJQUMzQixDQUFDO0lBRU0sT0FBTztRQUNaLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUE7SUFDNUIsQ0FBQztJQUVNLFdBQVcsQ0FBRSxRQUF5QjtRQUMzQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxDQUFBO0lBQ2hELENBQUM7SUFFTSxTQUFTLENBQUUsVUFBa0IsRUFBRSxJQUFrQjtRQUN0RCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFhLENBQUE7UUFDaEUsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDL0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsS0FBSyxVQUFVLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pFLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO1lBQ3pCLENBQUM7UUFDSCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUE7UUFDcEMsQ0FBQztRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUN2QyxDQUFDO0lBRU0sZ0JBQWdCLENBQUUsWUFBb0I7UUFDM0MsTUFBTSxDQUFDLEdBQUcsSUFBSSxtQkFBUSxDQUFDLElBQUksRUFBRSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDLENBQUE7UUFDNUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDdkIsTUFBTSxDQUFDLENBQUMsQ0FBQTtJQUNWLENBQUM7SUFFTSxPQUFPO1FBQ1osTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUE7SUFDL0IsQ0FBQztJQUVELENBQVMsTUFBTSxDQUFFLENBQWdDO1FBQy9DLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDL0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFBQyxNQUFNLENBQUMsQ0FBQTtZQUFDLENBQUM7UUFDdkIsQ0FBQztJQUNILENBQUM7SUFFTSxPQUFPO1FBQ1osTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQTtJQUNqQyxDQUFDO0NBQ0Y7QUFyREQsOEJBcURDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUUG9zaXRpb24sIFRTZXZlcml0eSwgSVJlc3VsdEl0ZW0sIFJlc3VsdEl0ZW19IGZyb20gJy4vcmVzdWx0LWl0ZW0nXG5pbXBvcnQge0NvbXBvc2l0ZURpc3Bvc2FibGUsIEVtaXR0ZXJ9IGZyb20gJ2F0b20nXG5pbXBvcnQge1Byb3ZpZGVyLCBUTWVzc2FnZVByb3ZpZGVyRnVuY3Rpb259IGZyb20gJy4vcHJvdmlkZXInXG5cbmV4cG9ydCB7VFBvc2l0aW9uLCBUU2V2ZXJpdHksIElSZXN1bHRJdGVtLCBUTWVzc2FnZVByb3ZpZGVyRnVuY3Rpb24sIFJlc3VsdEl0ZW19XG5cbmV4cG9ydCB0eXBlIFRVcGRhdGVDYWxsYmFjayA9IChhcmc6IFJlc3VsdHNEQikgPT4gdm9pZFxuXG5leHBvcnQgY2xhc3MgUmVzdWx0c0RCIHtcbiAgcHJpdmF0ZSBjdXJyZW50SWQ6IG51bWJlclxuICBwcml2YXRlIG1lc3NhZ2VzOiBNYXA8c3RyaW5nLCBSZXN1bHRJdGVtPlxuICBwcml2YXRlIGRpc3Bvc2FibGVzOiBDb21wb3NpdGVEaXNwb3NhYmxlXG4gIHByaXZhdGUgZW1pdHRlcjogRW1pdHRlclxuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgdGhpcy5jdXJyZW50SWQgPSAwXG4gICAgdGhpcy5kaXNwb3NhYmxlcyA9IG5ldyBDb21wb3NpdGVEaXNwb3NhYmxlKClcbiAgICB0aGlzLmVtaXR0ZXIgPSBuZXcgRW1pdHRlcigpXG4gICAgdGhpcy5kaXNwb3NhYmxlcy5hZGQodGhpcy5lbWl0dGVyKVxuICAgIHRoaXMubWVzc2FnZXMgPSBuZXcgTWFwKClcbiAgfVxuXG4gIHB1YmxpYyBkZXN0cm95ICgpIHtcbiAgICB0aGlzLmRpc3Bvc2FibGVzLmRpc3Bvc2UoKVxuICB9XG5cbiAgcHVibGljIG9uRGlkVXBkYXRlIChjYWxsYmFjazogVFVwZGF0ZUNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHRoaXMuZW1pdHRlci5vbignZGlkLXVwZGF0ZScsIGNhbGxiYWNrKVxuICB9XG5cbiAgcHVibGljIGRpZFVwZGF0ZSAocHJvdmlkZXJJZDogbnVtYmVyLCBtc2dzOiBSZXN1bHRJdGVtW10pIHtcbiAgICBjb25zdCB1cmlzID0gbXNncy5tYXAoKHYpID0+IHYudXJpKS5maWx0ZXIoKHYpID0+IHYpIGFzIHN0cmluZ1tdXG4gICAgZm9yIChjb25zdCBbaywgdl0gb2YgQXJyYXkuZnJvbSh0aGlzLm1lc3NhZ2VzKSkge1xuICAgICAgaWYgKHYucHJvdmlkZXJJZCA9PT0gcHJvdmlkZXJJZCB8fCB2LnVyaSAmJiB1cmlzLmluY2x1ZGVzKHYudXJpKSkge1xuICAgICAgICB0aGlzLm1lc3NhZ2VzLmRlbGV0ZShrKVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGNvbnN0IG1zZyBvZiBtc2dzKSB7XG4gICAgICB0aGlzLm1lc3NhZ2VzLnNldChtc2cuaGFzaCgpLCBtc2cpXG4gICAgfVxuICAgIHRoaXMuZW1pdHRlci5lbWl0KCdkaWQtdXBkYXRlJywgdGhpcylcbiAgfVxuXG4gIHB1YmxpYyByZWdpc3RlclByb3ZpZGVyIChwcm92aWRlck5hbWU6IHN0cmluZykge1xuICAgIGNvbnN0IHAgPSBuZXcgUHJvdmlkZXIodGhpcywgKyt0aGlzLmN1cnJlbnRJZCwgcHJvdmlkZXJOYW1lKVxuICAgIHRoaXMuZGlzcG9zYWJsZXMuYWRkKHApXG4gICAgcmV0dXJuIHBcbiAgfVxuXG4gIHB1YmxpYyByZXN1bHRzICgpIHtcbiAgICByZXR1cm4gdGhpcy5tZXNzYWdlcy52YWx1ZXMoKVxuICB9XG5cbiAgcHVibGljICogZmlsdGVyIChmOiAoaXRlbTogUmVzdWx0SXRlbSkgPT4gYm9vbGVhbikge1xuICAgIGZvciAoY29uc3QgdiBvZiB0aGlzLnJlc3VsdHMoKSkge1xuICAgICAgaWYgKGYodikpIHsgeWllbGQgdiB9XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGlzRW1wdHkgKCkge1xuICAgIHJldHVybiB0aGlzLm1lc3NhZ2VzLnNpemUgPT09IDBcbiAgfVxufVxuIl19