"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
const atom_1 = require("atom");
const utils_1 = require("../utils");
class ResultItem {
    constructor(providerId, { uri, message, severity, position, context }) {
        this.providerId = providerId;
        this.uri = uri;
        this.message = utils_1.MessageObject.fromObject(message);
        this.severity = severity;
        this.position = position && atom_1.Point.fromObject(position);
        this.context = context;
        this._isValid = true;
    }
    isValid() {
        return this._isValid;
    }
    setValid(isValid) {
        this._isValid = isValid;
    }
    hash() {
        if (this._hash) {
            return this._hash;
        }
        const h = crypto_1.createHash('sha1');
        h.update(JSON.stringify({
            uri: this.uri, position: this.position && this.position.serialize(),
            message: this.message.raw(), severity: this.severity,
            context: this.context
        }));
        this._hash = h.digest('base64');
        return this._hash;
    }
}
exports.ResultItem = ResultItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzdWx0LWl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcmVzdWx0cy1kYi9yZXN1bHQtaXRlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUFpQztBQUNqQywrQkFBMEI7QUFDMUIsb0NBQXNDO0FBRXRDO0lBUUUsWUFBNkIsVUFBa0IsRUFBRSxFQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQWtCO1FBQWhGLGVBQVUsR0FBVixVQUFVLENBQVE7UUFDN0MsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUE7UUFDZCxJQUFJLENBQUMsT0FBTyxHQUFHLHFCQUFhLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ2hELElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFBO1FBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxJQUFJLFlBQUssQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDdEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUE7UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUE7SUFDdEIsQ0FBQztJQUVNLE9BQU87UUFDWixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQTtJQUN0QixDQUFDO0lBRU0sUUFBUSxDQUFFLE9BQWdCO1FBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFBO0lBQ3pCLENBQUM7SUFFTSxJQUFJO1FBQ1QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQTtRQUFDLENBQUM7UUFDckMsTUFBTSxDQUFDLEdBQUcsbUJBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUM1QixDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDdEIsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUU7WUFDbkUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3BELE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztTQUN0QixDQUFDLENBQUMsQ0FBQTtRQUNILElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUMvQixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQTtJQUNuQixDQUFDO0NBQ0Y7QUFwQ0QsZ0NBb0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGVIYXNofSBmcm9tICdjcnlwdG8nXG5pbXBvcnQge1BvaW50fSBmcm9tICdhdG9tJ1xuaW1wb3J0IHtNZXNzYWdlT2JqZWN0fSBmcm9tICcuLi91dGlscydcblxuZXhwb3J0IGNsYXNzIFJlc3VsdEl0ZW0ge1xuICBwdWJsaWMgcmVhZG9ubHkgdXJpPzogc3RyaW5nXG4gIHB1YmxpYyByZWFkb25seSBwb3NpdGlvbj86IFBvaW50XG4gIHB1YmxpYyByZWFkb25seSBtZXNzYWdlOiBVUEkuSU1lc3NhZ2VPYmplY3RcbiAgcHVibGljIHJlYWRvbmx5IHNldmVyaXR5OiBVUEkuVFNldmVyaXR5XG4gIHB1YmxpYyByZWFkb25seSBjb250ZXh0Pzogc3RyaW5nXG4gIHByaXZhdGUgX2lzVmFsaWQ6IGJvb2xlYW5cbiAgcHJpdmF0ZSBfaGFzaD86IHN0cmluZ1xuICBjb25zdHJ1Y3RvciAocHVibGljIHJlYWRvbmx5IHByb3ZpZGVySWQ6IG51bWJlciwge3VyaSwgbWVzc2FnZSwgc2V2ZXJpdHksIHBvc2l0aW9uLCBjb250ZXh0fTogVVBJLklSZXN1bHRJdGVtKSB7XG4gICAgdGhpcy51cmkgPSB1cmlcbiAgICB0aGlzLm1lc3NhZ2UgPSBNZXNzYWdlT2JqZWN0LmZyb21PYmplY3QobWVzc2FnZSlcbiAgICB0aGlzLnNldmVyaXR5ID0gc2V2ZXJpdHlcbiAgICB0aGlzLnBvc2l0aW9uID0gcG9zaXRpb24gJiYgUG9pbnQuZnJvbU9iamVjdChwb3NpdGlvbilcbiAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0XG4gICAgdGhpcy5faXNWYWxpZCA9IHRydWVcbiAgfVxuXG4gIHB1YmxpYyBpc1ZhbGlkICgpIHtcbiAgICByZXR1cm4gdGhpcy5faXNWYWxpZFxuICB9XG5cbiAgcHVibGljIHNldFZhbGlkIChpc1ZhbGlkOiBib29sZWFuKSB7XG4gICAgdGhpcy5faXNWYWxpZCA9IGlzVmFsaWRcbiAgfVxuXG4gIHB1YmxpYyBoYXNoICgpIHtcbiAgICBpZiAodGhpcy5faGFzaCkgeyByZXR1cm4gdGhpcy5faGFzaCB9XG4gICAgY29uc3QgaCA9IGNyZWF0ZUhhc2goJ3NoYTEnKVxuICAgIGgudXBkYXRlKEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIHVyaTogdGhpcy51cmksIHBvc2l0aW9uOiB0aGlzLnBvc2l0aW9uICYmIHRoaXMucG9zaXRpb24uc2VyaWFsaXplKCksXG4gICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UucmF3KCksIHNldmVyaXR5OiB0aGlzLnNldmVyaXR5LFxuICAgICAgY29udGV4dDogdGhpcy5jb250ZXh0XG4gICAgfSkpXG4gICAgdGhpcy5faGFzaCA9IGguZGlnZXN0KCdiYXNlNjQnKVxuICAgIHJldHVybiB0aGlzLl9oYXNoXG4gIH1cbn1cbiJdfQ==