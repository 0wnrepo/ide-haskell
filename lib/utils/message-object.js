"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const highlight = require("atom-highlight");
function isTextMessage(msg) {
    return !!(msg && msg.text);
}
function isHTMLMessage(msg) {
    return !!(msg && msg.html);
}
class MessageObject {
    constructor(msg) {
        this.msg = msg;
    }
    static fromObject(message) {
        if (message instanceof MessageObject) {
            return message;
        }
        else {
            return new MessageObject(message);
        }
    }
    toHtml(linter = false) {
        if (this.htmlCache !== undefined) {
            return this.htmlCache;
        }
        if (isTextMessage(this.msg) && this.msg.highlighter) {
            const html = highlight({
                fileContents: this.msg.text,
                scopeName: this.msg.highlighter,
                nbsp: linter,
                lineDivs: linter,
            });
            if (html) {
                return this.htmlCache = html;
            }
            this.msg.highlighter = undefined;
            return this.toHtml();
        }
        else if (isHTMLMessage(this.msg)) {
            return this.htmlCache = this.msg.html;
        }
        else {
            let text;
            if (isTextMessage(this.msg)) {
                text = this.msg.text;
            }
            else {
                text = this.msg;
            }
            const div = document.createElement('div');
            div.innerText = text;
            return this.htmlCache = div.innerHTML;
        }
    }
    raw() {
        if (isTextMessage(this.msg)) {
            return this.msg.text;
        }
        else {
            return this.msg;
        }
    }
}
exports.MessageObject = MessageObject;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1vYmplY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvbWVzc2FnZS1vYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0Q0FBNEM7QUFFNUMsdUJBQXdCLEdBQWlCO0lBQ3ZDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUssR0FBd0IsQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUNsRCxDQUFDO0FBRUQsdUJBQXdCLEdBQWlCO0lBQ3ZDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUssR0FBd0IsQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUNsRCxDQUFDO0FBRUQ7SUFVRSxZQUFxQixHQUFpQjtRQUFqQixRQUFHLEdBQUgsR0FBRyxDQUFjO0lBRXRDLENBQUM7SUFYTSxNQUFNLENBQUMsVUFBVSxDQUFFLE9BQXFCO1FBQzdDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sWUFBWSxhQUFhLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLE1BQU0sQ0FBQyxPQUFPLENBQUE7UUFDaEIsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLElBQUksYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ25DLENBQUM7SUFDSCxDQUFDO0lBT00sTUFBTSxDQUFFLFNBQWtCLEtBQUs7UUFDcEMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUE7UUFBQyxDQUFDO1FBQzNELEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ3BELE1BQU0sSUFBSSxHQUFHLFNBQVMsQ0FBQztnQkFDckIsWUFBWSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSTtnQkFDM0IsU0FBUyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVztnQkFDL0IsSUFBSSxFQUFFLE1BQU07Z0JBQ1osUUFBUSxFQUFFLE1BQU07YUFDakIsQ0FBQyxDQUFBO1lBQ0YsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUE7WUFBQyxDQUFDO1lBRTFDLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxHQUFHLFNBQVMsQ0FBQTtZQUNoQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFBO1FBQ3RCLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUE7UUFDdkMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxJQUFZLENBQUE7WUFDaEIsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzVCLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQTtZQUN0QixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUE7WUFDakIsQ0FBQztZQUNELE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUE7WUFDekMsR0FBRyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUE7WUFDcEIsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQTtRQUN2QyxDQUFDO0lBQ0gsQ0FBQztJQUVNLEdBQUc7UUFDUixFQUFFLENBQUMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1QixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUE7UUFDdEIsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUE7UUFDakIsQ0FBQztJQUNILENBQUM7Q0FDRjtBQWpERCxzQ0FpREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaGlnaGxpZ2h0ID0gcmVxdWlyZSgnYXRvbS1oaWdobGlnaHQnKVxuXG5mdW5jdGlvbiBpc1RleHRNZXNzYWdlIChtc2c6IFVQSS5UTWVzc2FnZSk6IG1zZyBpcyBVUEkuSU1lc3NhZ2VUZXh0IHtcbiAgcmV0dXJuICEhKG1zZyAmJiAobXNnIGFzIFVQSS5JTWVzc2FnZVRleHQpLnRleHQpXG59XG5cbmZ1bmN0aW9uIGlzSFRNTE1lc3NhZ2UgKG1zZzogVVBJLlRNZXNzYWdlKTogbXNnIGlzIFVQSS5JTWVzc2FnZUhUTUwge1xuICByZXR1cm4gISEobXNnICYmIChtc2cgYXMgVVBJLklNZXNzYWdlSFRNTCkuaHRtbClcbn1cblxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VPYmplY3Qge1xuICBwdWJsaWMgc3RhdGljIGZyb21PYmplY3QgKG1lc3NhZ2U6IFVQSS5UTWVzc2FnZSk6IE1lc3NhZ2VPYmplY3QgIHtcbiAgICBpZiAobWVzc2FnZSBpbnN0YW5jZW9mIE1lc3NhZ2VPYmplY3QpIHtcbiAgICAgIHJldHVybiBtZXNzYWdlXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXcgTWVzc2FnZU9iamVjdChtZXNzYWdlKVxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgaHRtbENhY2hlPzogc3RyaW5nXG4gIGNvbnN0cnVjdG9yIChwcml2YXRlIG1zZzogVVBJLlRNZXNzYWdlKSB7XG4gICAgLy8gbm9vcFxuICB9XG5cbiAgcHVibGljIHRvSHRtbCAobGludGVyOiBib29sZWFuID0gZmFsc2UpOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLmh0bWxDYWNoZSAhPT0gdW5kZWZpbmVkKSB7IHJldHVybiB0aGlzLmh0bWxDYWNoZSB9XG4gICAgaWYgKGlzVGV4dE1lc3NhZ2UodGhpcy5tc2cpICYmIHRoaXMubXNnLmhpZ2hsaWdodGVyKSB7XG4gICAgICBjb25zdCBodG1sID0gaGlnaGxpZ2h0KHtcbiAgICAgICAgZmlsZUNvbnRlbnRzOiB0aGlzLm1zZy50ZXh0LFxuICAgICAgICBzY29wZU5hbWU6IHRoaXMubXNnLmhpZ2hsaWdodGVyLFxuICAgICAgICBuYnNwOiBsaW50ZXIsXG4gICAgICAgIGxpbmVEaXZzOiBsaW50ZXIsXG4gICAgICB9KVxuICAgICAgaWYgKGh0bWwpIHsgcmV0dXJuIHRoaXMuaHRtbENhY2hlID0gaHRtbCB9XG5cbiAgICAgIHRoaXMubXNnLmhpZ2hsaWdodGVyID0gdW5kZWZpbmVkXG4gICAgICByZXR1cm4gdGhpcy50b0h0bWwoKVxuICAgIH0gZWxzZSBpZiAoaXNIVE1MTWVzc2FnZSh0aGlzLm1zZykpIHtcbiAgICAgIHJldHVybiB0aGlzLmh0bWxDYWNoZSA9IHRoaXMubXNnLmh0bWxcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IHRleHQ6IHN0cmluZ1xuICAgICAgaWYgKGlzVGV4dE1lc3NhZ2UodGhpcy5tc2cpKSB7XG4gICAgICAgIHRleHQgPSB0aGlzLm1zZy50ZXh0XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0ZXh0ID0gdGhpcy5tc2dcbiAgICAgIH1cbiAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICBkaXYuaW5uZXJUZXh0ID0gdGV4dFxuICAgICAgcmV0dXJuIHRoaXMuaHRtbENhY2hlID0gZGl2LmlubmVySFRNTFxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyByYXcgKCkge1xuICAgIGlmIChpc1RleHRNZXNzYWdlKHRoaXMubXNnKSkge1xuICAgICAgcmV0dXJuIHRoaXMubXNnLnRleHRcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMubXNnXG4gICAgfVxuICB9XG59XG4iXX0=