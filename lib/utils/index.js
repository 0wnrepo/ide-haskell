"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var message_object_1 = require("./message-object");
exports.MessageObject = message_object_1.MessageObject;
__export(require("./cast"));
__export(require("./element-listener"));
exports.MAIN_MENU_LABEL = 'Haskell IDE';
function getEventType(detail) {
    if (detail && (detail.contextCommand || (detail[0] && detail[0].contextCommand))) {
        return "context";
    }
    else {
        return "keyboard";
    }
}
exports.getEventType = getEventType;
function bufferPositionFromMouseEvent(editor, event) {
    const sp = atom.views.getView(editor).component.screenPositionForMouseEvent(event);
    if (isNaN(sp.row) || isNaN(sp.column)) {
        return undefined;
    }
    return editor.bufferPositionForScreenPosition(sp);
}
exports.bufferPositionFromMouseEvent = bufferPositionFromMouseEvent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFJQSxtREFBZ0Q7QUFBdkMseUNBQUEsYUFBYSxDQUFBO0FBQ3RCLDRCQUFzQjtBQUN0Qix3Q0FBa0M7QUFFckIsUUFBQSxlQUFlLEdBQUcsYUFBYSxDQUFBO0FBRTVDLHNCQUE2QixNQUFXO0lBRXRDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pGLE1BQU0sV0FBd0I7SUFDaEMsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQUMsTUFBTSxZQUF5QjtJQUFDLENBQUM7QUFDNUMsQ0FBQztBQUxELG9DQUtDO0FBR0Qsc0NBQTZDLE1BQWtCLEVBQUUsS0FBaUI7SUFFaEYsTUFBTSxFQUFFLEdBQVcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFTLENBQUMsU0FBUyxDQUFDLDJCQUEyQixDQUFDLEtBQUssQ0FBQyxDQUFBO0lBQ2xHLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFBQyxNQUFNLENBQUMsU0FBUyxDQUFBO0lBQUMsQ0FBQztJQUMzRCxNQUFNLENBQUMsTUFBTSxDQUFDLCtCQUErQixDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQ25ELENBQUM7QUFMRCxvRUFLQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvaW50LCBUZXh0RWRpdG9yIH0gZnJvbSAnYXRvbSdcbmltcG9ydCAqIGFzIFVQSSBmcm9tICdhdG9tLWhhc2tlbGwtdXBpJ1xuaW1wb3J0IFRFdmVudFJhbmdlVHlwZSA9IFVQSS5URXZlbnRSYW5nZVR5cGVcblxuZXhwb3J0IHsgTWVzc2FnZU9iamVjdCB9IGZyb20gJy4vbWVzc2FnZS1vYmplY3QnXG5leHBvcnQgKiBmcm9tICcuL2Nhc3QnXG5leHBvcnQgKiBmcm9tICcuL2VsZW1lbnQtbGlzdGVuZXInXG5cbmV4cG9ydCBjb25zdCBNQUlOX01FTlVfTEFCRUwgPSAnSGFza2VsbCBJREUnXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRFdmVudFR5cGUoZGV0YWlsOiBhbnkpIHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXVuc2FmZS1hbnlcbiAgaWYgKGRldGFpbCAmJiAoZGV0YWlsLmNvbnRleHRDb21tYW5kIHx8IChkZXRhaWxbMF0gJiYgZGV0YWlsWzBdLmNvbnRleHRDb21tYW5kKSkpIHtcbiAgICByZXR1cm4gVEV2ZW50UmFuZ2VUeXBlLmNvbnRleHRcbiAgfSBlbHNlIHsgcmV0dXJuIFRFdmVudFJhbmdlVHlwZS5rZXlib2FyZCB9XG59XG5cbiAgLy8gc2NyZWVuIHBvc2l0aW9uIGZyb20gbW91c2UgZXZlbnRcbmV4cG9ydCBmdW5jdGlvbiBidWZmZXJQb3NpdGlvbkZyb21Nb3VzZUV2ZW50KGVkaXRvcjogVGV4dEVkaXRvciwgZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXVuc2FmZS1hbnlcbiAgY29uc3Qgc3A6IFBvaW50ID0gKGF0b20udmlld3MuZ2V0VmlldyhlZGl0b3IpIGFzIGFueSkuY29tcG9uZW50LnNjcmVlblBvc2l0aW9uRm9yTW91c2VFdmVudChldmVudClcbiAgaWYgKGlzTmFOKHNwLnJvdykgfHwgaXNOYU4oc3AuY29sdW1uKSkgeyByZXR1cm4gdW5kZWZpbmVkIH1cbiAgcmV0dXJuIGVkaXRvci5idWZmZXJQb3NpdGlvbkZvclNjcmVlblBvc2l0aW9uKHNwKVxufVxuIl19